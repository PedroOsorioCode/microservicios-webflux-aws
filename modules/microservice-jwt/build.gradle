plugins {
	id 'java'
	id 'org.springframework.boot' version '3.5.3'
	id 'io.spring.dependency-management' version '1.1.7'
}

group = 'co.com.microservice.jwt'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(21)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-webflux'
	implementation "org.apache.logging.log4j:log4j-core:2.24.3"
	implementation "org.apache.logging.log4j:log4j-api:2.24.3"
	implementation "org.apache.logging.log4j:log4j-to-slf4j:2.24.3"

	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-webflux'
	implementation 'io.jsonwebtoken:jjwt-api:0.11.5'

	runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
	runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5'

	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'io.projectreactor:reactor-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

// Para evitar conflicto con Logback
configurations {
	configureEach {
		exclude group: 'org.apache.logging.log4j', module: 'log4j-to-slf4j'
		exclude group: 'org.springframework.boot', module: 'spring-boot-starter-logging'
	}
}

tasks.named('test') {
	useJUnitPlatform()
}

//options.incremental = false recompila siempre todos los archivos del proyecto
tasks.withType(JavaCompile).configureEach {
	options.compilerArgs += ["-parameters"]
	options.incremental = false
}